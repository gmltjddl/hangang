<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.myapp.dao.QnaDao">

  <resultMap type="qna" id="qnaMap">
     <id column="qna_id" property="no"/>
     <result column="title" property="title"/>
    <result column="view_cnt" property="viewCount"/>
    <result column="content" property="content"/>
    <result column="created_date" property="createdDate"/>
    
    <association property="writer" javaType="member">
      <id column="writer" property="no"/>
      <result column="name" property="name"/>
      <result column="nickName" property="nickName"/>
  </association>
    

    
  </resultMap>

  <insert id="insert" parameterType="qna" 
  useGeneratedKeys="true" keyProperty="no" keyColumn="qna_id">
    insert into hms_qna(
      title,
      content,
      writer)
    values(#{title},#{content},#{writer.no})
  </insert>
  
  <select id="findAll" resultMap="qnaMap">
   select 
      q.qna_id,
      q.title,
      q.content,
      q.created_date,
      q.writer,
      q.view_cnt,
      (select nick from hms_mem m where m.member_id = q.writer) nickName
      
    from 
      hms_qna q
      order by
      q.qna_id desc
  </select>
  
    <select id="allMember" resultMap="qnaMap">
   select 
      qna_id,
      email,
      pwd,
      name,
      nick,
      tel,
      intro,
      inter,
      hob,
      created_date
    from 
      hms_qna
      order by
      qna_id desc
  </select>
  
  <select id="findByEmailAndPassword" parameterType="map" resultMap="qnaMap">
    select
      qna_id,
      email,
      name,
      nick,
      tel,
      intro,
      inter,
      hob,
      created_date
    from 
      hms_qna

    where 
      email = #{email} and pwd = sha2(#{password},256)
  </select>

  <select id="findByEmail" parameterType="string" resultMap="qnaMap">
    select
      qna_id,
      email,
      name,
      nick,
      tel,
      intro,
      inter,
      hob,
      created_date
    from 
      hms_qna 
    where 
      email = #{email}
  </select>

  <select id="findByNo" parameterType="int" resultMap="qnaMap">
    select 
      m.qna_id,
      m.email,
      m.name,
      m.nick,
      m.tel,
      m.intro,
      m.inter,
      m.hob,
      mf.qnafile_id,
      mf.filepath, 
      mf.origin_filename,
      mf.mime_type,
      m.created_date
    from 
      hms_qna m
       left outer join hms_qna_file mf on m.qna_id = mf.qna_id
    where 
      m.qna_id=#{no}
      order by
      mf.qnafile_id desc
  </select>
  
  <update id="update" parameterType="qna">
    update hms_qna set
      name=#{name}, 
      nick=#{nickName},
      intro=#{introduce},
      inter=#{interest},
      hob=#{hobby}
    where qna_id=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from hms_qna
    where qna_id=#{no}
  </delete>
</mapper>





